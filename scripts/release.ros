#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -L sbcl-bin -- $0 "$@"
|#
(or
 (ignore-errors
   (load "~/lisp/sn.github/sn.github.asd"))
 (ignore-errors
   (load "../sn.github/sn.github.asd")))
(ql:quickload '(:cl-ppcre :split-sequence :sn.github))
(use-package :sn.github.repos.releases)

(defun release-exist-p (tagname &key owner repo)
  (ignore-errors
    (find tagname
          (sn.github.repos.releases::releases-list owner repo)
          :key (lambda (x) (getf x :|tag_name|))
          :test 'equal)))

(defun ensure-release-exists (tagname &key owner repo)
  (let ((found (release-exist-p tagname :owner owner :repo repo)))
    (if found
        found
        (sn.github.repos.releases::release-create owner repo tagname))))

(defun asset-upload (path tagname &key owner repo)
  (sn.github.repos.releases::release-asset-upload
   owner repo
   (getf (release-exist-p tagname :owner owner :repo repo) :|id|) path))

(defun github (argv)
  (unless (uiop:getenv "GITHUB_OAUTH_TOKEN")
    (error "GITHUB_OAUTH_TOKEN must be set"))
  (ensure-release-exists (second argv))
  (asset-upload (pathname (first argv)) (second argv))
  :owner (third argv)
  :repo (fourth argv))

(defun main (subcmd &rest argv)
  (declare (ignorable argv))
  (let ((subcmd (find subcmd '(github)
                      :test 'equal :key 'string-downcase)))
    (when subcmd
      (funcall subcmd argv))))
